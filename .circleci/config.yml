version: 2.1

orbs:
  slack: circleci/slack@4.1

executors:
  default:
    docker:
      - image: hashicorp/terraform:1.1.4
    resource_class: small
    shell: /bin/sh -leo pipefail
    environment:
      - BASH_ENV: /etc/profile

commands:
  install-tfnotify:
    steps:
      - run:
          name: Install tfnotify
          command: |
            apk --no-cache --update add curl jq
            curl -fL -o tfnotify.tar.gz https://github.com/mercari/tfnotify/releases/download/v0.7.0/tfnotify_linux_amd64.tar.gz
            tar -C /usr/bin -xzf ./tfnotify.tar.gz
  install-aws-cli-v2:
    steps:
      - run:
          name: Install aws-cli-v2
          command: |
            export GLIBC_VER=2.34-r0
            apk --no-cache --update add binutils curl jq
            curl -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub
            curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-${GLIBC_VER}.apk
            curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk
            apk add --no-cache glibc-${GLIBC_VER}.apk glibc-bin-${GLIBC_VER}.apk
            curl -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip
            unzip -q awscliv2.zip
            aws/install
  assume-role:
    steps:
      - run:
          name: Assume-role
          command: |
            aws_sts_credentials="$(aws sts assume-role \
              --role-arn ${AWS_ASSUME_ROLE_ARN} \
              --role-session-name "circle-ci-session" \
              --external-id "9998" \
              --query "Credentials" \
              --output "json")"
            echo AWS_ACCESS_KEY_ID="$(echo $aws_sts_credentials | jq -r '.AccessKeyId')" >> $BASH_ENV
            echo AWS_SECRET_ACCESS_KEY="$(echo $aws_sts_credentials | jq -r '.SecretAccessKey')" >> $BASH_ENV
            echo AWS_SESSION_TOKEN="$(echo $aws_sts_credentials | jq -r '.SessionToken')" >> $BASH_ENV

jobs:
  validate:
    executor: default
    steps:
      - checkout
      - install-aws-cli-v2
      - assume-role
      - run:
          name: Init terraform
          command: terraform init
          working_directory: terraform
      - run:
          name: Validate terraform
          command: terraform validate
          working_directory: terraform
  plan:
    executor: default
    steps:
      - checkout
      - install-tfnotify
      - install-aws-cli-v2
      - assume-role
      - run:
          name: Init terraform
          command: terraform init
          working_directory: terraform
      - run:
          name: Plan terraform
          command: terraform plan | tfnotify --config ../.tfnotify.yml plan
          working_directory: terraform

workflows:
  terraform-workflow:
    jobs:
      - validate:
          context:
            - aws
      - plan:
          context:
            - slack
            - aws
            - github
          requires:
            - validate
