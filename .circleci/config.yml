version: 2.1

orbs:
  slack: circleci/slack@4.1
  aws-cli: circleci/aws-cli@2.0.6

executors:
  default:
    docker:
      - image: hashicorp/terraform:1.1.4
    resource_class: small

commands:
  install-tfnotify:
    steps:
      - run:
          name: "install curl"
          command: "apk --update add curl jq"
      - run:
          name: "download tfnotify"
          command: "curl -fL -o tfnotify.tar.gz https://github.com/mercari/tfnotify/releases/download/v0.7.0/tfnotify_linux_amd64.tar.gz"
      - run:
          name: "install tfnotify"
          command: "tar -C /usr/bin -xzf ./tfnotify.tar.gz"
      - run:
          name: "check tfnotify version"
          command: "tfnotify --version"

jobs:
  say-hello:
    executor: default
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
      - install-tfnotify
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
  plan:
    executor: default
    steps:
      - checkout
      - install-tfnotify
      - aws-cli/install
      - run:
          nane: assume-role
          command: |
            aws_sts_credentials="$(aws sts assume-role \
              --role-arn ${AWS_ASSUME_ROLE_ARN} \
              --role-session-name "circle-ci-session" \
              --external-id "9998" \
              --query "Credentials" \
              --output "json")"
            export AWS_ACCESS_KEY_ID="$(echo $aws_sts_credentials | jq -r '.AccessKeyId')"
            export AWS_SECRET_ACCESS_KEY="$(echo $aws_sts_credentials | jq -r '.SecretAccessKey')"
            export AWS_SESSION_TOKEN="$(echo $aws_sts_credentials | jq -r '.SessionToken')"
      - run:
          name: Init terraform
          command: terraform init
          working_directory: terraform
      - run:
          name: Validate terraform
          command: terraform validate
          working_directory: terraform
      - run:
          name: Plan terraform
          command: terraform plan
          working_directory: terraform

workflows:
  say-hello-workflow:
    jobs:
      - plan:
          context:
            - slack
            - aws
